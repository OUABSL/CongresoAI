

\section{Introduction}

Typically, machine learning algorithms take as input a set of objects, each described by a vector of numerical or categorical attributes, and produce (learn) a mapping from the input to the output predictions: a class label, a regression score, an associated cluster, or a latent representation, among others. In relational learning, relationships between objects are also taken into account during the learning process, and data is represented as a graph composed of nodes (entities) and links (relationships), both with possible associated properties.

The fact that relational learning methods can learn from the connections between data makes them very powerful in different domains \citep{Jacob:2014:LLR:2556195.2556225,webscale,6802366,lee2023conditional}. Learning to classify profiles in social networks based on their relationships with other objects \citep{tang2009relational,fan_2012}, characterising proteins based on functional connections that arise in organisms \citep{10.1007/978-3-642-23038-7_12}, and identifying molecules or molecular fragments with the potential to produce toxic effects \citep{camacho2011relational} are some prominent examples of relational machine learning applications.

There are two basic approaches to relational learning, the \textit{latent feature} or \textit{connectionist approach} and the \textit{ graph pattern-based approach} or \textit{symbolic approach}. \citep{de_raedt_2021}. The connectionist approach has proven its
---------------------------fin chunk----------------


its effectiveness in many different tasks \citep{kazemi2018relational,wu2022graph,zhou2020graph,ahmed2023adalnn,pacheco2021modeling,wang2020nodeaug}. In comparison, the pattern-based approach has been less successful. Two of the most important reasons for this fact are the computational complexity arising from relational queries and the lack of robust and general frameworks to serve as a basis for this kind of symbolic relational learning methods. On the one hand, most of the existing relational query systems are based on graph isomorphisms and their computational complexity is NP-complete, which affects the efficiency of learning methods using them \citep{latouche2015graphs}. On the other hand, most existing query systems do not allow atomic operations to expand queries in a partitioned manner, preventing learning systems from efficiently searching the query space \citep{Knobbe99multi-relationaldecision}. 

The novel graph query framework presented in this paper attempts to solve these two fundamental problems. The goal is to obtain a query system that allows graph pattern matching with controlled complexity and provides stepwise pattern expansion using well-defined operations. A framework that satisfies these requirements is suitable for use in relational machine learning techniques because, combined with appropriate exploration techniques, it allows the automatic extraction of characteristic relational patterns from data. 

Computational capacity needed to assess the
---------------------------fin chunk----------------


the performance of graph query methods is significant. Our study centres on formalising an efficient graph query system and defining a set of operations to refine queries. However, it does not conduct an extensive analysis of performance or efficiency in comparison to other methods. The primary result of our study is a mathematical formalisation for a graph query system that enables: The graph query system must fulfill three characteristics: (1) conducting atomic operations (refinements) to expand queries in a partitioned manner, (2) assessing any substructure in a graph (beyond isolated nodes or complete graphs), and (3) evaluating cyclic patterns in polynomial time. To the best of our knowledge, no other approach meets these requirements.

The paper is structured as follows. Section \ref{rw} provides an overview of related research. Section \ref{ggq} introduces a novel graph query framework, outlining its main definitions and properties that guarantee its utility. Representative query examples and an analysis of the computational complexity arising from the model are also presented. Section \ref{rml} describes the implementation of the framework to perform relational machine learning. Finally, Section \ref{cafw} presents the conclusions that can be drawn from this investigation and identifies potential avenues for future research.
---------------------------fin chunk----------------
